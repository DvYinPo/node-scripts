#!/usr/bin/env node
"use strict";var e=require("node:fs"),r=require("node:path");function o(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}require("node:url");const s=e,t=r;function n(e){if(!e)return console.log("require project dir!!!"),!1;const r=t.resolve(e,"package.json");let o=!1;if(s.existsSync(r)){const e=function(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}(r);o=e.dependencies?.typescript||e.devDependencies?.typescript}const n=s.existsSync(t.join(e,"tsconfig.json"));return o||n}var i=o((function(e,r,o="esm"){if(!["esm","cjs"].includes(o))return void console.log("mode must be esm or cjs!!!");Array.isArray(e)&&(e=t.resolve(...e)),(r=r.trim().replace(/\/$/,"").trim()).startsWith("./")||r.startsWith("../")||(r="./"+r);const i=n(e)?"index.ts":"index.js",c=t.resolve(e,r);if(!s.existsSync(c))return void console.log(`no such file or directory!!!\n=> ${c}`);const l=s.readdirSync(c).reduce(((e,n)=>{const i=t.resolve(c,n);if(s.statSync(i).isDirectory()){const c=s.existsSync(t.resolve(i,"index.ts")),l=s.existsSync(t.resolve(i,"index.js")),u=[];c&&u.push(t.resolve(i,"index.ts")),l&&u.push(t.resolve(i,"index.js")),u.forEach((t=>{const i=s.readFileSync(t,"utf-8");if("esm"===o){e+=`export * from '${r}/${n}';\n`;i.includes("export default")&&(e+=`export { default as ${n} } from '${r}/${n}';\n`)}else e+=`module.exports.${n} = require('${r}/${n}');\n`}))}else console.log("=> file",i);return e}),"");s.writeFileSync(t.resolve(e,i),l,"utf-8")}));module.exports=i;
